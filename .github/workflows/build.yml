name: Build-Release
on: [push, pull_request]
jobs:
  build-linux:
    name: Build App for Linux x64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Dependencies
        run: |
            sudo apt-get update
            sudo apt-get install cmake ninja-build libx11-dev libgtk-3-dev fuse libfuse2 -y --no-install-recommends
      - name: Configure
        run: |
            mkdir -p build
            cd build
            cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release ..
      - name: Build
        run: |
            cd build
            cmake --build . --config release --target install
      - name: Archive and upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name:  UnityHubNative-Linux64
          path:  build/Release/UnityHubNative.AppImage

  build-mac:
    name: Build App for macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Configure
        run: |
            mkdir -p build
            cd build
            cmake -G "Xcode" -DCMAKE_BUILD_TYPE=Release ..
      - name: Build 
        run: |
            cd build
            cmake --build . --config Release --target install
      - name: Archive
        run: |
            cd build/release
            zip -r -9 UnityHubNative.zip UnityHubNative.app/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: UnityHubNative-macOS
          path: build/release/UnityHubNative.zip
                
  build-windows:
    name: Build App for Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix: 
        arch: [x64, ARM64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Configure
        run: |
            mkdir build
            cd build
            cmake -A${{ matrix.arch }} -DCMAKE_BUILD_TYPE=Release .. ;
      - name: Build
        run: |
            cd build
            cmake --build . --config release --target install
      - name: Archive and upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: UnityHubNative-win${{ matrix.arch }}
          path: build\release\UnityHubNative.exe
